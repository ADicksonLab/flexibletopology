# Living pharmacophore example

This folder contains files and instructions for creating distributions
of ghost particles in a ligand binding site.  These can be thought of
as "living examplars" or "living pharmacophores" as they are created
through self-consistent modeling of protein, solvent and pharmacophore
degrees of freedom.

## Installation and setup

Since this never uses the typical Flexible Topology structure restraint
implemented by MLForce, setup is much simpler than a typical FT simulation.
Aside from openmm and `flexibletopology` (this repo), you only need
`openmmcontinuityforce`.

### Create a conda environment and install `openmm` and `mdtraj`
If you don't already have a working environment with CONDA, I recommend
setting it up at this point:
```
conda create -n flextop python=3.11
conda activate flextop
conda install -c conda-forge openmm mdtraj
```

### Installation of `flexibletopology`
If you have not already installed `flexibletopology` (this repo) then do so
now.

```
git clone https://github.com/ADicksonLab/flexibletopology.git
cd flexibletopology
pip install .
```

### Installation of `openmmcontinuityforce`

This is a plugin found [here](https://github.com/alexrd/openmmcontinuityforce).
Installation instructions are given in the github README.  To summarize, you will
need to clone the repo and build it with cmake, following the instructions provided
(making sure to set the right openmm directory!).  You might need to install `cmake`,
which you can do with conda (`conda install cmake`).

Another important note is that if you would like to run this in a GPU-enabled environment
(recommended!) then be sure to build this with `BUILD_CUDA_LIB` set to `ON`

## Running the example
